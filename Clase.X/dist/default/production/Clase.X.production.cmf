%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/production/modulo.o
resetVec CODE 0 0 0 1 2
code CODE 0 4A 4A B 2
main CODE 0 20 20 2A 2
config CONFIG 4 2007 2007 2 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 2-3F 1
CONST AA-1FFF 1
ENTRY 2-3F 1
ENTRY AA-1FFF 1
IDLOC 2000-2003 2
CODE 2-3F 1
CODE AA-1FFF 1
SFR0 2-1F 1
SFR2 100-10F 1
SFR3 180-18F 1
COMMON 70-7F 1
STRCODE 2-3F 1
STRCODE AA-1FFF 1
STRING 2-3F 1
STRING AA-1FFF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/production/modulo.o
20 main CODE >38:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
20 main CODE >39:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
22 main CODE >40:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
23 main CODE >41:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
24 main CODE >42:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
26 main CODE >43:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
27 main CODE >44:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
28 main CODE >45:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
2A main CODE >46:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
2B main CODE >47:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
2C main CODE >48:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
2D main CODE >49:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
2F main CODE >50:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
30 main CODE >51:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
31 main CODE >52:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
32 main CODE >53:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
33 main CODE >54:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
35 main CODE >55:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
36 main CODE >56:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
37 main CODE >57:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
39 main CODE >58:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3A main CODE >59:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3B main CODE >60:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3B main CODE >61:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3C main CODE >62:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3E main CODE >63:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3F main CODE >64:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
3F main CODE >65:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
40 main CODE >66:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
41 main CODE >67:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
43 main CODE >68:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
45 main CODE >69:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
46 main CODE >70:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
48 main CODE >71:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
49 main CODE >72:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
0 resetVec CODE >20:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
0 resetVec CODE >21:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4A code CODE >24:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4A code CODE >25:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4B code CODE >26:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4C code CODE >27:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4D code CODE >28:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4E code CODE >29:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
4F code CODE >30:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
50 code CODE >31:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
51 code CODE >32:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
52 code CODE >33:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
53 code CODE >34:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
54 code CODE >35:C:\Users\2RJ23LA_RS6\MPLABXProjects\Clase.X\modulo.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 94 0 ABS 0 - -
__Hspace_1 0 0 ABS 0 - -
__Hspace_3 4A 0 ABS 0 - -
__Hspace_4 4010 0 ABS 0 - -
__Hudata_bank0 94 0 ABS 0 udata_bank0 -
__Hudata_bank1 94 0 ABS 0 udata_bank1 -
__Hudata_bank2 94 0 ABS 0 udata_bank2 -
__Hudata_bank3 94 0 ABS 0 udata_bank3 -
__LresetVec 0 0 CODE 0 resetVec -
__HresetVec 2 0 CODE 0 resetVec -
__Hedata 94 0 EEDATA 3 edata -
__Hudata 94 0 ABS 0 udata -
__Hconfig 4012 0 CONFIG 4 config -
__Ledata 94 0 EEDATA 3 edata -
__Ludata 94 0 ABS 0 udata -
__Hcode 94 0 ABS 0 code -
__Hdata 94 0 ABS 0 data -
__Hmain 94 0 CODE 0 main -
__Lcode 94 0 ABS 0 code -
__Ldata 94 0 ABS 0 data -
__Lmain 40 0 CODE 0 main -
__S0 AA 0 ABS 0 - -
__S1 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Ludata_bank0 94 0 ABS 0 udata_bank0 -
__Ludata_bank1 94 0 ABS 0 udata_bank1 -
__Ludata_bank2 94 0 ABS 0 udata_bank2 -
__Ludata_bank3 94 0 ABS 0 udata_bank3 -
__Hudata_shr 94 0 ABS 0 udata_shr -
__Ludata_shr 94 0 ABS 0 udata_shr -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
resetVec 0 0 0 1 2
main 0 20 40 35 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
